<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.xml.ListMapper">
    <resultMap id="listResultMap" type="com.EmployeeEditor.EmployeeDTO">
        <result property="empId" column="EMP_ID"/>
        <result property="empName" column="EMP_NAME"/>
        <result property="empNo" column="EMP_NO"/>
        <result property="email" column="EMAIL"/>
        <result property="phone" column="PHONE"/>
        <result property="deptCode" column="DEPT_CODE"/>
        <result property="jobCode" column="JOB_CODE"/>
        <result property="salLevel" column="SAL_LEVEL"/>
        <result property="salary" column="SALARY"/>
        <result property="bonus" column="BONUS"/>
        <result property="managerId" column="MANAGER_ID"/>
        <result property="hireDate" column="HIRE_DATE"/>
        <result property="entDate" column="ENT_DATE"/>
        <result property="entYn" column="ENT_YN"/>
    </resultMap>

    <select id="selectAllList" resultMap="listResultMap">
        select emp_id,
        emp_name,
        emp_no,
        email,
        phone,
        dept_code,
        job_code,
        sal_level,
        salary,
        bonus,
        manager_id,
        hire_date,
        ent_date,
        ent_yn
        from employee
        order by emp_id
    </select>

    <select id="selectListById" parameterType="String" resultMap="listResultMap">
        select emp_id,
        emp_name,
        emp_no,
        email,
        phone,
        dept_code,
        job_code,
        sal_level,
        salary,
        bonus,
        manager_id,
        hire_date,
        ent_date,
        ent_yn
        from employee
        where emp_id = #{ empId }
    </select>

    <select id="selectListByName" parameterType="String" resultMap="listResultMap">
        select emp_id,
        emp_name,
        emp_no,
        email,
        phone,
        dept_code,
        job_code,
        sal_level,
        salary,
        bonus,
        manager_id,
        hire_date,
        ent_date,
        ent_yn
        from employee
        where emp_name = #{ empName }
    </select>

    <insert id="addEmployee" parameterType="com.EmployeeEditor.EmployeeDTO">
        insert into employee (
        emp_id,
        emp_name,
        emp_no,
        email,
        phone,
        dept_code,
        job_code,
        sal_level,
        salary,
        bonus,
        manager_id,
        hire_date,
        ent_date,
        ent_yn,
        ) values (
        #{ emp_id },
        #{ emp_name },
        #{ emp_no },
        #{ email },
        #{ phone },
        #{ dept_code },
        #{ job_code },
        #{ sal_level },
        #{ salary },
        #{ bonus },
        #{ manager_id },
        #{ hire_date },
        #{ ent_date },
        #{ ent_yn }
        )
    </insert>

    <update id="editEmployee" parameterType="com.EmployeeEditor.EmployeeDTO">
        update employee
        set
        emp_id = #{ empId },
        emp_name = #{ empName },
        emp_no = #{ empNo },
        email = #{ email },
        phone = #{ phone },
        dept_code = #{ deptCode },
        job_code = #{ jobCode },
        sal_level = #{ salLevel },
        salary = #{ salary },
        bonus = #{ bonus },
        manager_id = #{ managerId },
        hire_date = #{ empId },
        ent_date = #{ empId },
        ent_yn = #{ empId }
        where
        menu_code = #{ code }
    </update>

    <delete id="deleteEmployee" parameterType="String">
        delete
        from employee
        where emp_id = #{ empId }
    </delete>
</mapper>